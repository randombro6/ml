import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler

df = pd.read_csv("iris.csv")
df.head()

X = df.drop(['species'],axis = 1)
X_Scaled = StandardScaler().fit_transform(X)
X_Scaled[:5]

y = df['species']
y.head()

features = X_Scaled.T
cov_matrix = np.cov(features)
cov_matrix[:5]

values,vectors = np.linalg.eig(cov_matrix)
values[:5]

vectors[:5]

exp_var = []
for i in range(len(values)):
  exp_var.append((values[i]/np.sum(values))*100)

print("Variance of each feature",exp_var);

plt.figure(figsize=(8,4))
plt.bar(range(4),exp_var,alpha=0.6)
plt.ylabel('Percentage of explained variance')
plt.xlabel('Dimensions')

projected_1 = X_Scaled.dot(vectors.T[0])
projected_2 = X_Scaled.dot(vectors.T[1])
res = pd.DataFrame(projected_1,columns=['PC1'])
res['PC2'] = projected_2
res['Y'] = y
res.head()

sns.FacetGrid(res,hue='Y',height=6).map(plt.scatter,'PC1','PC2').add_legend()
plt.show()

